#!/usr/bin/env ruby

require "s3deploy"

begin
  if ARGV.empty?
    unless S3deploy.config_files?
      raise "Create config files first with 's3deploy init' or 's3deploy init --default'."
    end
    s3deploy = S3deploy.new
    s3deploy.deploy
  elsif ARGV.first == "init"
    S3deploy.install_config(ARGV.include? "--default")
  elsif ARGV.first == "simulate"
    s3deploy = S3deploy.new
    if ARGV[1] && ARGV[1] == "empty"
      s3deploy.empty(true)
    else
      s3deploy.deploy(true)
    end
  elsif ARGV.first == "empty"
    s3deploy = S3deploy.new
    s3deploy.empty(false)
  else
    puts <<-eos
  S3deploy usage.

  s3deploy init (creates folder configuration)
  s3deploy init --default (creates default configuration)

  s3deploy (deploys the site to Amazon S3)
  s3deploy simulate (simulates a deployment of the site to Amazon S3)
  
  Folder configurations takes precedence over default configurations.
  I put my aws key, secret and region in default and the rest in folder.

  s3deploy empty (deletes all files in bucket)
  s3deploy simulate empty (simulates deletion of files)

            eos
  end
rescue Exception => e
  puts e.message
end